#!/bin/bash
### BEGIN INIT INFO
# Provides:          ci-hpc
# Required-Start:    $local_fs $network $named $time $syslog
# Required-Stop:     $local_fs $network $named $time $syslog
# Default-Start:     2 3 4 5
# Default-Stop:      0 1 6
# Description:       Start a flask visualisation server
### END INIT INFO

ROOT="$( cd "$( dirname "${BASH_SOURCE[0]}" )/.." && pwd )"

# Change the next 3 lines to suit where you install your script and what you want to call it
DAEMON="$ROOT/ci-hpc/visualisation/main.py"
DAEMON_NAME=ci-hpc

# Add any command line options for your daemon here
ACTION="${1:---}"
shift
DAEMON_ARGS="$@"

# This next line determines what user the script runs as.
# DAEMON_USER=$@

# The process ID of the script when it runs is stored here:
PIDFILE=/tmp/$DAEMON_NAME.pid


if [[ -f /lib/lsb/init-functions ]]; then
  . /lib/lsb/init-functions

  do_start () {
      log_daemon_msg "Starting system $DAEMON_NAME daemon"
      start-stop-daemon -v --start --background --pidfile $PIDFILE --make-pidfile --startas $DAEMON -- $DAEMON_ARGS
      log_end_msg $?
  }
  do_stop () {
      log_daemon_msg "Stopping system $DAEMON_NAME daemon"
      start-stop-daemon -v --stop --pidfile $PIDFILE --retry 3
      log_end_msg $?
  }

  case "$ACTION" in
      start|stop)
          do_${ACTION}
          ;;

      restart|reload|force-reload)
          do_stop
          do_start
          ;;

      status)
          status_of_proc -p "$PIDFILE" "$DAEMON_NAME" "$DAEMON" && exit 0 || exit $?
          ;;

      --)
          echo "Starting the server directly: "
          echo -e "  $ROOT/ci-hpc/visualisation/main.py "$@"\n"
          $ROOT/ci-hpc/visualisation/main.py "$@"
          ;;

      -h|--help)
          echo "Usage: bin/server {start|stop|restart|status}"
          exit 1
          ;;
  esac
else
  echo "Could not find /lib/lsb/init-functions file, starting the server directly: "
  $ROOT/ci-hpc/visualisation/main.py "$@"
fi
